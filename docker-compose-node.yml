version: "3.5"

services:
  cardano-node:
    image: ghcr.io/intersectmbo/cardano-node:${NODE_TAG}
    environment:
      NETWORK:
      CARDANO_NODE_SOCKET_PATH: /ipc/node.socket
    volumes:
      - ${NODE_DB}:/data
      - node-ipc:/ipc
      - ./configs/cardano:/configs
    restart: on-failure
    healthcheck:
      # Ping the EKG port to see if it responds.
      # Assuming if EKG isn't up then the rest of cardano-node isn't either.
      test: ["CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    entrypoint: []
    command: >
      cardano-node run --topology /configs/${NETWORK:-mainnet}/topology.json
        --database-path /data
        --socket-path /ipc/node.socket
        --config /configs/${NETWORK:-mainnet}/config.json

  cardano-db-sync:
    image: ghcr.io/intersectmbo/cardano-db-sync:13.2.0.1
    environment:
      DISABLE_LEDGER: ${DISABLE_LEDGER}
      NETWORK: ${NETWORK:-mainnet}
      POSTGRES_HOST: ${PGHOST}
      POSTGRES_PORT: ${PGPORT:-5432}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DATABASE: ${CARDANO_PGDATABASE:-cardano}
      RESTORE_SNAPSHOT: ${RESTORE_SNAPSHOT:-}
      RESTORE_RECREATE_DB: N
      EXTRA_DB_SYNC_ARGS: ${EXTRA_DB_SYNC_ARGS:-}
    depends_on:
      # Depend on both services to be healthy before starting.
      cardano-node:
        condition: service_healthy
    volumes:
      - db-sync-data:/var/lib/cexplorer
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-wallet:
    image: cardanofoundation/cardano-wallet:${WALLET_TAG}
    volumes:
      - ${WALLET_DB}:/wallet-db
      - node-ipc:/ipc
      - ./configs/cardano:/configs
    ports:
      - ${WALLET_PORT:-8090}:8090
    entrypoint: []
    command: bash -c "
        ([[ $$NETWORK == \"mainnet\" ]] && $$CMD --mainnet) ||
        ($$CMD --testnet /configs/${NETWORK}/byron-genesis.json)"
    environment:
      CMD: "cardano-wallet serve --node-socket /ipc/node.socket --database /wallet-db --listen-address 0.0.0.0"
      NETWORK: ${NETWORK:-mainnet}
    depends_on:
      # Depend on both services to be healthy before starting.
      cardano-node:
        condition: service_healthy
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        compress: "true"
        max-file: "10"
        max-size: "50m"
  icarus:
    image: piotrstachyra/icarus:v2023-04-14
    network_mode: "host"
    restart: on-failure

volumes:
  db-sync-data:
  node-db:
  node-ipc:

